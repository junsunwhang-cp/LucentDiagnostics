{"version":3,"sources":["C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/$_lazy_route_resource lazy","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.component.css","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.component.html","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.component.ts","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.module.ts","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/comms.service.ts","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/reportview/reportview.component.css","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/reportview/reportview.component.html","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/reportview/reportview.component.ts","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/treeview/treeview.component.css","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/treeview/treeview.component.html","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/treeview/treeview.component.ts","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/dialogs/dialog.busy.window.html","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/dialogs/dialog.progress.window.html","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/services/data.service.ts","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/environments/environment.ts","C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n  \\r\\n.ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"margin-left:20px;text-align:left;font-family:arial;color:#337ab7\\\">\\r\\n    <h3><b>Lucent Utilities - a.04</b></h3>\\r\\n</div>\\r\\n\\r\\n<!-- TODO: remove manual persistence after normal version is implemented. -->\\r\\n\\r\\n<!--\\r\\n<div style='margin-left:20px;'>\\r\\n    <button (click)=\\\"onUpdateMeta()\\\">Persist meta data (dev purpose only)</button>\\r\\n    <button (click)=\\\"testDataFetch()\\\">TestDataFetch</button>\\r\\n</div>\\r\\n<br>\\r\\n-->\\r\\n<div style='margin-left:20px;margin-right:20px;'>\\r\\n    <!-- <form (submit)=\\\"addServerMeta(serverInfo.value)\\\"> -->\\r\\n        <form (submit)=\\\"addServerMeta()\\\">\\r\\n        <div>\\r\\n            <!--\\r\\n            <table>\\r\\n                <td style=\\\"width:10%;text-align:right;\\\"><label for=\\\"serverInfo\\\">Add Server Instance:</label></td>\\r\\n                <td style=\\\"width:60%;\\\"><input type=\\\"text\\\" #serverInfo></td>\\r\\n                <td style=\\\"width:30%;\\\"></td>\\r\\n            </table>\\r\\n        -->\\r\\n        <table style=\\\"width:50%;\\\">\\r\\n                <!--    \\r\\n                <tr><label for=\\\"serverInfo\\\">Add Server Instance:</label></tr>\\r\\n                <tr><input type=\\\"text\\\" #serverInfo></tr> -->\\r\\n                Add Server Definition:\\r\\n                <tr><input [(ngModel)]='workingServerLabel' name='workingServerLabel' type=\\\"text\\\"></tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div style=\\\"margin-left:20px; margin-right:20px; margin-top:20px; margin-bottom:20px;\\\">\\r\\n    <collapsible-list [type]=\\\"collapsibleType\\\">\\r\\n        <collapsible-list-item *ngFor=\\\"let server of servers; let i = index\\\">\\r\\n\\r\\n            <collapsible-header class=\\\"waves-effect\\\" style=\\\"background-color:darkgrey\\\">\\r\\n                <i class=\\\"fa fa-chevron-down\\\"\\r\\n                [ngClass]=\\\"{\\r\\n                  'fa-chevron-down': server.expanded,\\r\\n                  'fa-chevron-right': !server.expanded\\r\\n                }\\\"\\r\\n                aria-hidden=\\\"true\\\"></i>\\r\\n                <b>{{server.label}} <span style=\\\"color:lightslategrey\\\"> - http://{{server.domain}}:{{server.port}}/{{server.path}} </span></b> \\r\\n            </collapsible-header>\\r\\n\\r\\n            <collapsible-body  [expanded]=\\\"server.expanded\\\"\\r\\n            (toggleState)=\\\"server.expanded = $event\\\">\\r\\n            <p style=\\\"text-align: left\\\">\\r\\n                {{server.url}}</p>\\r\\n                <!-- add detail inputs and option to delete server entry -->\\r\\n\\r\\n                <!-- <div class=\\\"container\\\"> -->\\r\\n                    <form #serverForm=\\\"ngForm\\\" (ngSubmit)=\\\"addServerDetail(server)\\\">\\r\\n                        <table>\\r\\n                            <tr>\\r\\n                            <td style=\\\"width:35%;\\\">\\r\\n                                <!-- <label for=\\\"domain\\\">Domain:</label> -->\\r\\n                                <div class=\\\"form-group\\\" style=\\\"padding-right:40px;\\\">\\r\\n                                Host Name <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                <!-- <input style=\\\"padding:3px; height:15px;\\\" formControlName='serverDomainControl' required name='serverDomain' type=\\\"text\\\" class='form-control'> -->\\r\\n                                <input style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='server.domain' required name='serverDomain' #serverDomain=\\\"ngModel\\\" type=\\\"text\\\" class='form-control'>\\r\\n                                <div *ngIf=\\\"serverDomain.invalid && (serverDomain.dirty || serverDomain.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    Host name is required.\\r\\n                                </div>\\r\\n                                </div>\\r\\n                                <!-- <label for=\\\"port\\\">Port:</label>-->\\r\\n                                <div class=\\\"form-group\\\" style=\\\"padding-right:40px;\\\">\\r\\n                                Port <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                \\r\\n                                <!-- <input  style=\\\"padding:3px; height:15px;\\\" formControlName='serverPortControl' required name='serverPort' type=\\\"number\\\" class='form-control'> -->\\r\\n                                <input  style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='server.port' required name='serverPort' #serverPort=\\\"ngModel\\\" type=\\\"number\\\" class='form-control'>\\r\\n                                <div *ngIf=\\\"serverPort.invalid && (serverPort.dirty || serverPort.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        Port number is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!--<label for=\\\"path\\\">Path:</label>-->\\r\\n                                <div class=\\\"form-group\\\" style=\\\"padding-right:40px;\\\">\\r\\n                                App Name <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                \\r\\n                                <!-- <input  style=\\\"padding:3px; height:15px;\\\" formControlName='serverPathControl' required name='serverPath' type=\\\"text\\\" class='form-control'> -->\\r\\n                                <input  style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='server.path' required name='serverPath' #serverPath=\\\"ngModel\\\" type=\\\"text\\\" class='form-control'>\\r\\n                                <div *ngIf=\\\"serverPath.invalid && (serverPath.dirty || serverPath.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        Web application name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td style=\\\"width:35%;\\\">\\r\\n\\r\\n                                <div class=\\\"form-group\\\" style=\\\"padding-right:40px;\\\">\\r\\n                                Username <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                \\r\\n                                <!-- <input style=\\\"padding:3px; height:15px;\\\" formControlName='serverUsernameControl' required name='serverUsername' type=\\\"text\\\" class='form-control'> -->\\r\\n                                <input style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='server.username' required name='serverUsername' #serverUsername=\\\"ngModel\\\" type=\\\"text\\\" class='form-control'>\\r\\n                                    <div *ngIf=\\\"serverUsername.invalid && (serverUsername.dirty || serverUsername.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        User name is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\" style=\\\"padding-right:40px;\\\">\\r\\n                                Password <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                \\r\\n                                <!-- <input  style=\\\"padding:3px; height:15px;\\\" formControlName='serverPasswordControl' required name='serverPassword' type=\\\"text\\\" class='form-control'> -->\\r\\n                                <input  style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='server.password' required name='serverPassword' #serverPassword=\\\"ngModel\\\" type=\\\"text\\\" class='form-control'>\\r\\n                                <div *ngIf=\\\"serverPassword.invalid && (serverPassword.dirty || serverPassword.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                        Password is required.\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                            <td style=\\\"width:30%;\\\">\\r\\n                                <!--<label for=\\\"path\\\">Notes:</label>-->\\r\\n                                Notes<textarea [(ngModel)]='server.notes' name='serverNotes' #serverNotes=\\\"ngModel\\\" style=\\\"height:150px;\\\" >\\r\\n                                    {{server.notes}}</textarea>\\r\\n                            </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>\\r\\n                                    <div style=\\\"text-align:left;\\\">\\r\\n                                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"height:30px;\\\"\\r\\n                                            [disabled]=\\\"serverForm.invalid\\\"\\r\\n                                            >refresh</button>\\r\\n                                    </div> \\r\\n                                </td>\\r\\n                                <td>\\r\\n                                </td>\\r\\n                                <td>\\r\\n                                    <div style=\\\"text-align:right;\\\">\\r\\n                                        <button  (click)=\\\"deleteServerInfo(server)\\\">Delete server definition</button>\\r\\n                                    </div>\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <br>\\r\\n                            </tr>\\r\\n                        </table>\\r\\n                    </form>\\r\\n                <!-- </div> -->\\r\\n                \\r\\n                <div style=\\\"margin-left:5px; margin-right:5px; margin-top:5px; margin-bottom:5px;\\\">\\r\\n                    <collapsible-list [type]=\\\"collapsibleType\\\">\\r\\n                        <collapsible-list-item>\\r\\n                        \\r\\n                        <collapsible-header class=\\\"waves-effect\\\" style=\\\"background-color:lightgrey\\\">\\r\\n                            <i class=\\\"fa fa-chevron-down\\\"\\r\\n                            [ngClass]=\\\"{\\r\\n                              'fa-chevron-down': server.diagnosticsModule.expanded,\\r\\n                              'fa-chevron-right': !server.diagnosticsModule.expanded\\r\\n                            }\\\"\\r\\n                            aria-hidden=\\\"true\\\"></i>\\r\\n                            <b>Load Test<span style=\\\"color:lightslategrey\\\"></span></b> \\r\\n                        </collapsible-header>\\r\\n            \\r\\n                        <collapsible-body  [expanded]=\\\"server.diagnosticsModule.expanded\\\"\\r\\n                        (toggleState)=\\\"server.diagnosticsModule.expanded = $event\\\">\\r\\n\\r\\n\\r\\n                            <!-- jsw.test.start -->\\r\\n                            <!--\\r\\n                            <div>\\r\\n                                <dialog-overview-example>loading</dialog-overview-example>\\r\\n                            </div>\\r\\n                            -->\\r\\n                            <!-- jsw.test.end -->\\r\\n                            \\r\\n                            <app-treeview [serverid]='server.id'></app-treeview>\\r\\n\\r\\n                            <h4><b>Selected Reports:</b></h4>\\r\\n                            <!-- <form #reportExecsForm=\\\"ngForm\\\" [formGroup]=\\\"selectedReportsForm\\\" (ngSubmit)=\\\"executeReportTests()\\\"> -->\\r\\n                            <form #reportExecsForm=\\\"ngForm\\\" (ngSubmit)=\\\"executeReportTests(server.id)\\\"> \\r\\n                                <ul style=\\\"list-style-type:disc\\\">         \\r\\n<!--\\r\\n                                    <input type='hidden' name='serverid' id='serverid' value='{{server.id}}'>\\r\\n-->\\r\\n                                    <li *ngFor=\\\"let report of server.diagnosticsModule.reports; let i = index\\\"> <b>{{report.name}}</b> ( {{report.url}} ) <button  (click)=\\\"deleteReportInfo(server,report)\\\"> X </button><br> \\r\\n                                        <table>\\r\\n                                            <tr>\\r\\n                                                <td style=\\\"width:50%;\\\">\\r\\n                                                    <div  style=\\\"padding-right:40px;\\\">\\r\\n\\r\\n                                                                \\r\\n                                                        Number of report iterations <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                                        <input  style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='report.iterations' required name='iterations'  #iterations=\\\"ngModel\\\" \\r\\n                                                        type=\\\"number\\\" class='form-control'>\\r\\n                                                        <div *ngIf=\\\"iterations.invalid && (iterations.dirty || iterations.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                                                Report iterations value is required.\\r\\n                                                        </div>\\r\\n\\r\\n\\r\\n                                                        <!--\\r\\n                                                        Number of report execution iterations <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                                        <input required class=\\\"form-group\\\" formControlName=\\\"iterationsControl\\\" style=\\\"padding:3px; height:15px;\\\" name='reportIterations' \\r\\n                                                        type=\\\"number\\\" class='form-control'>  \\r\\n                                                        -->\\r\\n                                                        <!--    \\r\\n                                                        <input [formControl]=\\\"minRangeFormControl\\\" style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='report.iterations' required name='reportIterations' \\r\\n                                                        #reportIterations=\\\"ngModel\\\" type=\\\"number\\\"> \\r\\n                                                        -->\\r\\n                                                        <!--\\r\\n                                                        <div *ngIf=\\\"reportIterations{{i}}.invalid && (reportIterations{{i}}.dirty || reportIterations{{i}}.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                                                Number of iterations for the report to be run is required.\\r\\n                                                            </div>\\r\\n                                                        -->\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                                <td style=\\\"width:50%;\\\">\\r\\n                                                        <div style=\\\"padding-right:40px;\\\">\\r\\n                                                        Think time between executions in seconds <label for=\\\"required\\\"> ( Required ) </label>\\r\\n                                                    \\r\\n                                                        <input  style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='report.thinkTime' required name='thinkTime' #thinkTime=\\\"ngModel\\\" type=\\\"number\\\" class='form-control'>\\r\\n                                                        <div *ngIf=\\\"thinkTime.invalid && (thinkTime.dirty || thinkTime.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                                                Report think time value is required.\\r\\n                                                        </div>\\r\\n\\r\\n                                                    <!--\\r\\n                                                    <input required class=\\\"form-group\\\" formControlName='thinkTimeControl' style=\\\"padding:3px; height:15px;\\\" name='reportThinktime' \\r\\n                                                    type=\\\"number\\\" class='form-control'>                                        \\r\\n                                                    -->\\r\\n                                                    <!--\\r\\n                                                    <input min=\\\"1\\\" style=\\\"padding:3px; height:15px;\\\" [(ngModel)]='report.thinkTime' required name='reportThinktime' \\r\\n                                                    #reportThinktime=\\\"ngModel\\\" type=\\\"number\\\">\\r\\n                                                    -->\\r\\n                                                    <!--\\r\\n                                                    <div *ngIf=\\\"reportThinktime{{i}}.invalid && (reportThinktime{{i}}.dirty || reportThinktime{{i}}.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                                                            Number of seconds between report iterations is required.\\r\\n                                                        </div>\\r\\n                                                    -->\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </table>\\r\\n                                    </li>\\r\\n                                </ul>\\r\\n                                <div style=\\\"text-align:left;\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"height:30px;\\\"\\r\\n                                        [disabled]=\\\"(reportExecsForm.invalid || server.diagnosticsModule.reports.length<1)\\\"\\r\\n                                        >execute tests</button>\\r\\n                                </div> \\r\\n                            </form>             \\r\\n                            <hr>\\r\\n                            <!-- <h4><b>Test Results:</b></h4> -->\\r\\n                            <!-- <div innerHtml=\\\"{{testResultsHtml}}\\\"></div> -->\\r\\n                            \\r\\n                            <!--\\r\\n                            <div [innerHtml]=\\\"testResultsHtml | SafeHtml\\\"></div>\\r\\n                            -->\\r\\n                            <div style=\\\"position:relative;\\\" id='reportBottom_{{server.id}}'></div>\\r\\n                            <div style=\\\"position:relative;\\\" [innerHtml]=\\\"getServerRuntimeHtml(server.id) | SafeHtml\\\"></div>\\r\\n\\r\\n                            \\r\\n                           <!--\\r\\n                            <p></p>\\r\\n                            <app-reportview></app-reportview>\\r\\n                            <p></p>\\r\\n                           -->\\r\\n                        </collapsible-body>\\r\\n\\r\\n                    </collapsible-list-item>\\r\\n                </collapsible-list>\\r\\n                </div>\\r\\n            </collapsible-body>\\r\\n\\r\\n        </collapsible-list-item>\\r\\n    </collapsible-list>\\r\\n\\r\\n</div>\\r\\n\\r\\n \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Inject, Injectable, Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { DecimalPipe, DOCUMENT } from '@angular/common';\nimport { DataService} from './services/data.service';\nimport { resource } from 'selenium-webdriver/http';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CommsService } from './comms.service';\nimport { ServerInfo, ServerRuntimeInfo, ReportInfo, DiagnosticsInfo, FetchReportListPacket } from './comms.service';\nimport { v4 as uuid } from 'uuid';\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs/Observable';\nimport { DomSanitizer } from '@angular/platform-browser'\n\n//jsw.test.start.\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n//jsw.test.end.\n\ninterface TestResults {\n  execTime:string,\n  execId:string\n}\n\n@Pipe({ name: 'SafeHtml'})\nexport class SafeHtmlPipe implements PipeTransform  {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value) {\n    //console.log(this.sanitized.bypassSecurityTrustHtml(value))\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers:[CommsService]\n})\n\nexport class AppComponent implements OnInit {\n  title = 'app';\n  servers:ServerInfo[] = [];\n  serverRuntimes:ServerRuntimeInfo[] = [];\n\n  //workingServer:ServerInfo;\n  workingServerLabel:string;\n  //selectedReportsForm:FormGroup;\n  busyDialog:MatDialogRef<BusyDialog>;\n  progressDialog:MatDialogRef<ProgressDialog>;\n  testsConcluded = false; //used for modal global wait state.\n  testIntervalId;\n  //testResultsHtml = ' ';\n  DOCUMENT: any;\n\n  constructor(private dataService: DataService, private commsService: CommsService, private dialog:MatDialog) {\n  \n  }\n\n  ngOnInit(){ //test intitialization of some server entries.\n/*\n    this.selectedReportsForm = new FormGroup({\n      iterationsControl : new FormControl('3',[<any>Validators.min(1),<any>Validators.required]),\n      thinkTimeControl : new FormControl('5',[<any>Validators.min(1),<any>Validators.required])\n    });\n    */\n    //populate with server meta data if any exists already.\n    this.dataService.getServerMeta().subscribe((serverMeta) => {\n    this.servers = serverMeta;\n\n    //console.log(String(this.servers));\n    //iterate through server entries and ensure report list is populated with a non null array.\n    var serverEntryLength = this.servers.length;\n    for (var i=0; i<serverEntryLength; i++){\n      console.log(this.servers[i]);\n      this.servers[i].diagnosticsModule.reports = new Array();\n      let sri:ServerRuntimeInfo = {\n        id:String(this.servers[i].id),\n        innerhtml:''\n      };\n      this.serverRuntimes.push(sri);\n    }\n\n  });\n\n\n  }\n\n  addServerMeta(){\n    //console.log(serverInfo);\n    let srs:ReportInfo[] = [];\n    let diagModule:DiagnosticsInfo = {\n      reports:srs,\n      expanded:true\n    };\n\n    let serverId = uuid();\n\n    let ss:ServerInfo = {\n    id:String(serverId),\n    label:this.workingServerLabel,\n    domain:'',\n    port: 8080,\n    path: 'jasperserver-pro',\n    username:'',\n    password:'',\n    notes:'',\n    diagnosticsModule:diagModule,\n    expanded:true };\n\n    let sri:ServerRuntimeInfo = {\n      id:String(serverId),\n      innerhtml:''\n    };\n\n    //this.servers.unshift(ss);\n    this.workingServerLabel = '';\n   // this.workingServer = ss;  //TODO: find another means of transmitting the server ref.\n\n    this.servers.unshift(ss);\n    this.serverRuntimes.unshift(sri);\n    return false; \n  }\n\n  deleteServerInfo(server){\n    for(let i=0;i<this.servers.length;i++){\n      if(this.servers[i]==server){\n        this.servers.splice(i,1);\n      }\n    }\n  }\n\n  deleteReportInfo(server, report){\n    for (let r=0; r<server.diagnosticsModule.reports.length;r++){\n      if (server.diagnosticsModule.reports[r]==report){\n        server.diagnosticsModule.reports.splice(r,1);\n      }\n    }\n  }\n\n  addServerDetail(server){\n    //update details and try to update the list of reports.\n\n    //if form is valid, submit this information about the server to be persisted.\n    //also refresh the contents of the report list for the server.\n\n    //this.workingServer = server;  //TODO: find another means of transmitting the server ref.\n   \n    this.busyDialog = this.dialog.open(BusyDialog, {\n      disableClose: true,\n      width: '400px',\n      data: { }\n    });\n    let newFetchPacket:FetchReportListPacket = {\n      serverInfo: server,\n      dialogR:  this.busyDialog\n    };\n\n    this.commsService.updateReportTable(newFetchPacket); //get info from the server\n  }\n\n  addSelectedReport(treeServerId:string, data:any){ \n    \n    let nr:ReportInfo = { \n      selected: true,\n      iterations: 3,\n      thinkTime: 5,\n      name: data.row.label, \n      url: data.row.uri\n    };\n\n    this.getServerInstance(treeServerId).diagnosticsModule.reports.unshift(nr);\n\n    //this.workingServer.diagnosticsModule.reports.unshift(nr);\n  } \n\n  executeReportTests(serverid:string){ \n\n    //console.log('submitted val:' + subVal);\n\n    this.progressDialog = this.dialog.open(ProgressDialog, {\n      disableClose: true,\n      width: '500px',\n      data: { }\n    });\n    \n    this.executeReportTestsCall(serverid);\n  }\n\n  executeReportTestsCall(serverid:string){\n\n    let relatedServer:ServerInfo = this.getServerInstance(serverid);\n\n    this.dataService.execLoadTest(relatedServer).subscribe((sResp) => {\n      this.testsConcluded = false;\n      var serverResponse = sResp;\n    })\n \n    this.testIntervalId = setInterval( ()=>this.checkStatusReportTests(serverid) , 1000);\n  }\n\n  checkStatusReportTests(serverid:string){\n    if (this.testsConcluded === true){\n      clearInterval(this.testIntervalId); //no need to update status.\n    } else { //retrieve status and update the progress indicator.\n      //get results.\n      let relatedServer:ServerInfo = this.getServerInstance(serverid);\n      this.dataService.execStatusCheck(relatedServer).subscribe((sResp) =>{\n        //update progress bar.\n        var status = sResp.status;\n        var completed = sResp.totalcompleted;\n        var assigned = sResp.totalassigned;\n        this.progressDialog.componentInstance.setProgress( (completed/assigned) * 100 );        \n\n        if ((typeof assigned!='undefined') && (typeof completed!='undefined') && (completed === assigned)) {\n          //if tests are complete:\n          //  1.set the flag to indicate tests are done\n          //  2.close the dialog.          \n\n          //jsw.test.start\n          //window.open(\"/viewreport?LoadTestId=testId1_jswTest\", \"_blank\");\n          this.dataService.viewReportResults(relatedServer).subscribe((gResp) => {\n            //var sample = gResp.text();\n           \n            this.setServerRuntimeHtml(serverid,gResp.text());\n\n            var tempInterval = setInterval(function(){\n              window.document.getElementById('reportBottom_' + serverid).scrollIntoView(true); \n              clearInterval(tempInterval);\n            }, 1000);\n\n            this.testsConcluded = true;\n            this.progressDialog.close();\n          });\n          //jsw.test.end\n        } \n      })\n    }\n  }\n\n  getServerInstance(serverid:string){\n    let i:number;\n    for (i=0; i<this.servers.length ;i++){\n      if (this.servers[i].id === serverid){\n        return this.servers[i];\n      }\n    }\n  }\n\n  setServerRuntimeHtml(serverid:string, inner:string){\n    let i:number;\n    for (i=0; i<this.serverRuntimes.length ;i++){\n      if (this.serverRuntimes[i].id === serverid){\n        this.serverRuntimes[i].innerhtml = inner;\n      }\n    }\n  }\n\n  getServerRuntimeHtml(serverid:string){\n    let i:number;\n    for (i=0; i<this.serverRuntimes.length ;i++){\n      if (this.serverRuntimes[i].id === serverid){\n        return this.serverRuntimes[i].innerhtml;\n      }\n    }\n    return null;\n  }\n\n} \n\n  @Component({\n    selector: 'dialog-busy',\n    templateUrl: './dialogs/dialog.busy.window.html',\n  })\n  export class BusyDialog { \n  \n    constructor(\n      public dialogRef: MatDialogRef<BusyDialog>,\n      @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  }\n  \n  @Component({\n    selector: 'dialog-progress',\n    templateUrl: './dialogs/dialog.progress.window.html',\n  })\n  export class ProgressDialog { \n  \n    progressPerc:number = 0;\n\n    constructor(\n      public dialogRef: MatDialogRef<ProgressDialog>,\n      @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n    setProgress(progress:number){\n      this.progressPerc = progress;\n    }\n\n  }\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent, SafeHtmlPipe } from './app.component';\nimport { Ng2TableModule } from 'ng2-table/ng2-table';\n\nimport { TreeviewComponent } from './components/treeview/treeview.component';\n\nimport { DataService } from './services/data.service';\nimport { PaginationModule, AlertModule } from 'ngx-bootstrap';\nimport { CollapsibleModule } from 'angular2-collapsible';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n//import { MatDialogModule, MatProgressBarModule, MatProgressSpinnerModule } from '@angular/material';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\nimport { BusyDialog, ProgressDialog } from './app.component';\nimport { ReportviewComponent } from './components/reportview/reportview.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TreeviewComponent, \n    BusyDialog,\n    ProgressDialog,\n    ReportviewComponent,\n    SafeHtmlPipe\n  ],\n  imports: [\n    AlertModule.forRoot(),\n    BrowserModule,\n    HttpModule, \n    Ng2TableModule,\n    PaginationModule.forRoot(),\n    BrowserAnimationsModule,\n    CollapsibleModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule\n  ],\n  entryComponents: [\n    BusyDialog, ProgressDialog\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n}) \nexport class AppModule { } \n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Subject }    from 'rxjs/Subject';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { BusyDialog } from './app.component';\r\n\r\n  export interface ServerInfo {\r\n    id ?:string,\r\n    label ?:string,\r\n    domain ?:string,\r\n    port ?: number,\r\n    path ?: string,\r\n    username ?:string,\r\n    password ?:string,\r\n    notes ?:string,\r\n    diagnosticsModule ?:DiagnosticsInfo,\r\n    expanded ?:boolean,\r\n    testId ?:string\r\n  }\r\n\r\n  export interface ServerRuntimeInfo {\r\n    id ?:string,\r\n    innerhtml ?:string\r\n  }\r\n\r\n  export interface DiagnosticsInfo {\r\n    reports ?:ReportInfo[],\r\n    expanded ?:boolean,\r\n    testResultsHtml ?:string\r\n  }\r\n\r\n  export interface ReportInfo { \r\n    selected ?:boolean,\r\n    iterations ?:number,\r\n    thinkTime ?:number,\r\n    name ?:string,\r\n    url ?:string\r\n  }\r\n\r\n  export interface FetchReportListPacket {\r\n    serverInfo: ServerInfo,\r\n    dialogR: MatDialogRef<BusyDialog>\r\n  }\r\n\r\n@Injectable()\r\nexport class CommsService {\r\n\r\n    private messageSource= new Subject<FetchReportListPacket>();\r\n    messageObs$ = this.messageSource.asObservable();\r\n\r\n    /*\r\n    testAlert(server:ServerInfo, note:string){\r\n        this.messageSource.next(note);\r\n        alert(note);\r\n    }\r\n    */\r\n\r\n    updateReportTable(fetchInfo:FetchReportListPacket){\r\n      this.messageSource.next(fetchInfo);\r\n    }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/comms.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/reportview/reportview.component.css\n// module id = ../../../../../src/app/components/reportview/reportview.component.css\n// module chunks = main","module.exports = \"<h4><b>Test Results:</b></h4>\\n<div id='report_view'></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/reportview/reportview.component.html\n// module id = ../../../../../src/app/components/reportview/reportview.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-reportview',\n  templateUrl: './reportview.component.html',\n  styleUrls: ['./reportview.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ReportviewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/reportview/reportview.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hoverTable{\\r\\n    border-collapse:collapse; \\r\\n}\\r\\n.hoverTable td{ \\r\\n    padding:2px;\\r\\n}\\r\\n.hoverTableBackground{\\r\\n    background:lightskyblue;\\r\\n}\\r\\n.hoverTable tr:hover {\\r\\n    background-color: #ffff99;\\r\\n}\\r\\n\\r\\n.table-hover > tbody > tr:hover {\\r\\n    background-color: blue;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/treeview/treeview.component.css\n// module id = ../../../../../src/app/components/treeview/treeview.component.css\n// module chunks = main","module.exports = \"<!-- <div style=\\\"margin-left:20px; margin-right:20px; margin-top:20px; margin-bottom:20px;\\\"> -->\\n<h4><b>Repository Reports:</b></h4>\\n<div>\\n  <ng-table ng-mouseover=\\\"table-hover\\\" id=\\\"reportViewTable_{{serverid}}\\\" [config]=\\\"getCurrentInstance(serverid).config\\\"\\n    (tableChanged)=\\\"onChangeTable(getCurrentInstance(serverid).config)\\\"\\n    (cellClicked)=\\\"onCellClick($event)\\\"\\n    [rows]=\\\"getCurrentInstance(serverid).instrows\\\" [columns]=\\\"getCurrentInstance(serverid).instcolumns\\\">\\n  </ng-table>\\n  <pagination *ngIf=\\\"getCurrentInstance(serverid).config.paging\\\" class=\\\"pagination-sm\\\"\\n    [(ngModel)]=\\\"getCurrentInstance(serverid).page\\\"\\n    [totalItems]=\\\"getCurrentInstance(serverid).length\\\"\\n    [itemsPerPage]=\\\"getCurrentInstance(serverid).itemsPerPage\\\"\\n    [maxSize]=\\\"getCurrentInstance(serverid).maxSize\\\"\\n    [boundaryLinks]=\\\"true\\\"\\n    [rotate]=\\\"false\\\"\\n    (pageChanged)=\\\"onChangeTable(getCurrentInstance(serverid).config,$event)\\\"\\n    (numPages)=\\\"getCurrentInstance(serverid).numPages = $event\\\">\\n  </pagination>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/treeview/treeview.component.html\n// module id = ../../../../../src/app/components/treeview/treeview.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation, OnDestroy, Input } from '@angular/core';\nimport { DataService} from '../../services/data.service';\nimport { AppComponent} from '../../app.component';\nimport { Ng2TableModule } from 'ng2-table/ng2-table';\nimport { NgTableComponent, NgTableFilteringDirective, NgTablePagingDirective, NgTableSortingDirective } from 'ng2-table/ng2-table';\nimport { PaginationModule, TabsModule } from 'ngx-bootstrap';\nimport { NG_TABLE_DIRECTIVES } from 'ng2-table/ng2-table';\n\nimport { CommsService } from '../../comms.service';\nimport { Subscription } from 'rxjs/Subscription';\n//import { TableData } from './table-data'; //jsw.localtest.1 of 3\nimport { ServerInfo, ReportInfo } from '../../comms.service';\n\nlet template = require('./treeview.component.html');\n\ninterface TreeInstanceInfo {\n  instrows ?:Array<any>,\n  instcolumns ?:Array<any>,\n  data ?: any,\n  page:number,\n  itemsPerPage:number,\n  maxSize:number,\n  numPages:number,\n  length:number,\n  config:any\n}\n\n@Component({\n  selector: 'app-treeview',\n  template,\n  styleUrls: ['./treeview.component.css'],  \n  encapsulation: ViewEncapsulation.None\n})\nexport class TreeviewComponent implements OnInit { \n\n  @Input() serverid:string = '';\n\n  //test.start.  TODO: remove.\n  //private data:Array<any> = TableData; //jsw.localtest.2 of 3\n  //private data:Array<any>; //jsw.deployed.1 of 2\n  //test.end.\n\n  //private dataMap = new Map<string,any>();\n  private instanceInfoMap = new Map<string,TreeInstanceInfo>();\n\n  //public rows:Array<any> = [];\n  //public columns:Array<any> = [\n  //  {title: 'Label', name: 'label', filtering: {filterString: '', placeholder: 'Filter by label'}},\n  //  {title: 'URI', name: 'uri', filtering: {filterString: '', placeholder: 'Filter by uri'}} \n    /*,\n    {title: 'Office', className: ['office-header', 'text-success'], name: 'office', sort: 'asc'},\n    {title: 'Extn.', name: 'ext', sort: '', filtering: {filterString: '', placeholder: 'Filter by extn.'}},\n    {title: 'Start date', className: 'text-warning', name: 'startDate'},\n    {title: 'Salary ($)', name: 'salary'} */\n    //];\n  /*\n  public selRows:Array<any> = [];\n  public selColumns:Array<any> = [\n    {title: 'Name', name: 'name', filtering: {filterString: '', placeholder: 'Filter by name'}},\n    {\n      title: 'Position',\n      name: 'position',\n      sort: false,\n      filtering: {filterString: '', placeholder: 'Filter by position'}\n    },\n    {title: 'Office', className: ['office-header', 'text-success'], name: 'office', sort: 'asc'},\n    {title: 'Extn.', name: 'ext', sort: '', filtering: {filterString: '', placeholder: 'Filter by extn.'}},\n    {title: 'Start date', className: 'text-warning', name: 'startDate'},\n    {title: 'Salary ($)', name: 'salary'}\n  ];\n*/\n\n/*\n  public page:number = 1;\n  public itemsPerPage:number = 10;\n  public maxSize:number = 5;\n  public numPages:number = 1;\n  public length:number = 0;\n*/  \n\n  /*\n  public selPage:number=1;\n  public selItemsPerPage:number = 5;\n  public selLength:number = 0;\n  */\n\n  /*\n  public config:any = {\n    paging: true,\n    sorting: {columns: this.columns},\n    filtering: {filterString: ''},\n    className: ['table-striped', 'table-bordered', 'table-condensed'],\n    selectedRowClass: 'selectedRow'\n  };\n  */\n\n  private createInstanceInfo():TreeInstanceInfo {\n\n    let newTreeInstance:TreeInstanceInfo = {\n      instrows:[],\n      instcolumns: [\n         {title: 'Label', name: 'label', filtering: {filterString: '', placeholder: 'Filter by label'}},\n          {title: 'URI', name: 'uri', filtering: {filterString: '', placeholder: 'Filter by uri'}} ],\n      data: null,\n      page: 1,\n      itemsPerPage: 10,\n      maxSize: 5,\n      numPages: 1,\n      length: 0,\n      config: {\n        paging: true,\n        sorting: {columns: null},\n        filtering: {filterString: ''},\n        className: ['table-striped', 'table-bordered', 'table-condensed'],\n        selectedRowClass: 'selectedRow'\n      }\n    }\n    newTreeInstance.config.sorting.columns = newTreeInstance.instcolumns;\n    this.instanceInfoMap.set(this.serverid, newTreeInstance);\n\n    return newTreeInstance; \n  }\n\n  private getCurrentInstance(sid:string):TreeInstanceInfo {\n    //console.log ('get current instance from=' + sid + ', serverid=' + this.serverid);\n    return this.instanceInfoMap.get(sid);\n  }\n\n  constructor(private dataService:DataService, private appComponent:AppComponent, private commsService:CommsService) {\n  }\n  \n  ngOnInit() { \n    //jsw.localtest.3 of 3 \n    //this.onChangeTable(this.config);\n    let treeInst = this.createInstanceInfo();\n\n    this.commsService.messageObs$.subscribe(\n      fetchPacket => {\n        //alert('message observed');\n        //console.log('treeview subscribe function access.');\n        //jsw.deployed.2 of 2\n        this.dataService.getRepoReports(fetchPacket.serverInfo.id, fetchPacket.serverInfo.domain, \n          String(fetchPacket.serverInfo.port), fetchPacket.serverInfo.path, \n          fetchPacket.serverInfo.username, fetchPacket.serverInfo.password,\n          fetchPacket.serverInfo.label, fetchPacket.serverInfo.notes\n        ).subscribe((reportServerData) => {\n          //console.log(reportServerData); \n          //this.data = reportServerData;\n          //this.dataMap.set(this.serverid, reportServerData);\n\n          this.getCurrentInstance(this.serverid).data = reportServerData;\n          this.onChangeTable(this.getCurrentInstance(this.serverid).config);\n          fetchPacket.dialogR.close();\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(){\n  }\n\n  public externalChangePage(){\n    this.onChangeTable(this.getCurrentInstance(this.serverid).config);\n  }\n/*\n  public changePage(page:any, data:Array<any> = this.data):Array<any> {\n    let start = (page.page - 1) * page.itemsPerPage;\n    let end = page.itemsPerPage > -1 ? (start + page.itemsPerPage) : data.length;\n    return data.slice(start, end);\n  }\n*/\n\npublic changePage(page:any, data:Array<any> = this.getCurrentInstance(this.serverid).data):Array<any> {\n  let start = (page.page - 1) * page.itemsPerPage;\n  let end = page.itemsPerPage > -1 ? (start + page.itemsPerPage) : data.length;\n  return data.slice(start, end);\n}\n\n  public changeSort(data:any, config:any):any {\n    if (!config.sorting) {\n      return data;\n    }\n\n    let columns = this.getCurrentInstance(this.serverid).config.sorting.columns || [];\n    let columnName:string = void 0;\n    let sort:string = void 0;\n\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].sort !== '' && columns[i].sort !== false) {\n        columnName = columns[i].name;\n        sort = columns[i].sort;\n      }\n    }\n\n    if (!columnName) {\n      return data;\n    }\n\n    // simple sorting\n    return data.sort((previous:any, current:any) => {\n      if (previous[columnName] > current[columnName]) {\n        return sort === 'desc' ? -1 : 1;\n      } else if (previous[columnName] < current[columnName]) {\n        return sort === 'asc' ? -1 : 1;\n      }\n      return 0;\n    });\n  }\n\n  public changeFilter(data:any, config:any):any {\n    let filteredData:Array<any> = data;\n    this.getCurrentInstance(this.serverid).instcolumns.forEach((column:any) => {\n      if (column.filtering) {\n        filteredData = filteredData.filter((item:any) => {\n          return item[column.name].match(column.filtering.filterString);\n        });\n      }\n    });\n\n    if (!config.filtering) {\n      return filteredData;\n    }\n\n    if (config.filtering.columnName) {\n      return filteredData.filter((item:any) =>\n        item[config.filtering.columnName].match(this.getCurrentInstance(this.serverid).config.filtering.filterString));\n    }\n\n    let tempArray:Array<any> = [];\n    filteredData.forEach((item:any) => {\n      let flag = false;\n      this.getCurrentInstance(this.serverid).instcolumns.forEach((column:any) => {\n        if (item[column.name].toString().match(this.getCurrentInstance(this.serverid).config.filtering.filterString)) {\n          flag = true;\n        }\n      });\n      if (flag) {\n        tempArray.push(item);\n      }\n    });\n    filteredData = tempArray;\n\n    return filteredData;\n  }\n\n  public onChangeTable(config:any, page:any = {page: this.getCurrentInstance(this.serverid).page, \n  itemsPerPage: this.getCurrentInstance(this.serverid).itemsPerPage}):any {\n    if (config.filtering) {\n      Object.assign(this.getCurrentInstance(this.serverid).config.filtering, config.filtering);\n    }\n\n    if (config.sorting) {\n      Object.assign(this.getCurrentInstance(this.serverid).config.sorting, config.sorting);\n    }\n\n    //let filteredData = this.changeFilter(this.data, this.config);\n    let filteredData = this.changeFilter(this.getCurrentInstance(this.serverid).data, this.getCurrentInstance(this.serverid).config);\n\n    let sortedData = this.changeSort(filteredData, this.getCurrentInstance(this.serverid).config);\n    this.getCurrentInstance(this.serverid).instrows = page && config.paging ? this.changePage(page, sortedData) : sortedData;\n    this.getCurrentInstance(this.serverid).length = sortedData.length;\n  }\n\n  public onCellClick(data: any): any {\n    //console.log(data);\n    //console.log(\"on cell click from server: \" + this.serverid);\n    this.appComponent.addSelectedReport(this.serverid, data);\n\n    /*\n    let index = this.data.indexOf(data.row);\n    \n    document.getElementById('reportViewTable')  on('click','tr', function(event:any)){\n      $(this).classList.add(\"hoverTableBackground\");\n    }\n    */\n    \n  }\n \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/components/treeview/treeview.component.ts","module.exports = \"<h1 mat-dialog-title>Loading report list</h1>\\r\\n<div mat-dialog-content>\\r\\n  <!-- <p>Loading report list.</p> -->\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\r\\n</div>\\r\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/dialogs/dialog.busy.window.html\n// module id = ../../../../../src/app/dialogs/dialog.busy.window.html\n// module chunks = main","module.exports = \"<h1 mat-dialog-title>Executing report tests</h1>\\r\\n<div mat-dialog-content>\\r\\n  <!-- <p>Executing report tests.</p> -->\\r\\n  current progress: {{progressPerc | number: '1.0-0'}}%\\r\\n  <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{progressPerc}}\\\"></mat-progress-bar>\\r\\n</div> \\r\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/dialogs/dialog.progress.window.html\n// module id = ../../../../../src/app/dialogs/dialog.progress.window.html\n// module chunks = main","import { Injectable, Component, Inject } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { v4 as uuid } from 'uuid';\n\nimport { ServerInfo, ReportInfo, DiagnosticsInfo } from '../comms.service';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class DataService {\n\n  constructor(public http:Http) {\n    console.log('ds connect.')  ;\n  }\n\n  //jsw: test only. TODO: remove.\n  getPosts(){   \n    return this.http.get('https://jsonplaceholder.typicode.com/posts')\n      .map(res => res.json());\n  }\n  //jsw.test.end.\n\n  getServerMeta(){\n    var serverMeta = this.http.get('/serverinfo/meta').map(sMeta => sMeta.json());\n    return serverMeta;\n  }\n\n  getRepoReports(id:string, hostName:string, port:string, path:string, username:string, \n    password:string, label:string, notes:string ){\n    var reportResults = this.http.get(encodeURI('/serverinfo/reportList?' + 'id=' + id + '&hostname=' + hostName + \n    '&port=' + port + '&path=' + path + '&username=' + username + '&password=' + password +\n    '&label=' + label + '&notes=' + notes)\n  ).map(res => res.json());\n    return reportResults;\n  }\n\n  execLoadTest(server:ServerInfo){\n    var headers = new Headers();\n    var newTestId = uuid();\n    server.testId = newTestId;\n    headers.append('Content-Type', 'application/json');\n    headers.append('LoadTestId', newTestId);\n    //headers.append('LoadTestId', 'testId1_jswTest');\n    return this.http.post('/loadtest/start', server, {headers}).map(res => res.json());\n  }\n\n  execStatusCheck(server:ServerInfo){\n    var headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        //headers.append('LoadTestId', 'testId1_jswTest');\n        headers.append('LoadTestId', server.testId);\n    return this.http.post('/loadtest/status', server, {headers}).map(res => res.json());\n  }\n\n  viewReportResults(server:ServerInfo){\n    return this.http.get('/viewreport?LoadTestId=' + server.testId);\n  }\n\n} \n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/app/services/data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/jwhang/Workspaces/workspace_angular/CSLucentBrowserClient/src/main.ts"],"sourceRoot":"webpack:///"}