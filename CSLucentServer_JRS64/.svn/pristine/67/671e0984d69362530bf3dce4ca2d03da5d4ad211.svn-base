package com.tibco.jaspersoft.cs.lucent.server.ws;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import java.util.Queue;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.BeanFactory;
import org.springframework.beans.factory.BeanFactoryAware;

import com.jaspersoft.jasperserver.remote.exception.RemoteException;
import com.thoughtworks.xstream.XStream;
import com.tibco.jaspersoft.cs.lucent.server.api.LogEntry;
import com.tibco.jaspersoft.cs.lucent.server.api.LucentGlobalContext;
import com.tibco.jaspersoft.cs.lucent.server.logging.LogEntryImpl;
import com.tibco.jaspersoft.cs.lucent.server.logging.LogTestResults;

/*
 * $Id: LucentServiceImpl.java 134 2016-12-02 23:15:16Z jwhang $
 */
public class LucentServiceImpl implements LucentService, BeanFactoryAware {

	private BeanFactory beanFactory;
	
	public String getMetrics(HttpServletRequest request,  Map<String,String[]> parameterMap) throws RemoteException {
		StringBuffer sb = new StringBuffer();
		Queue<LogEntry> entryQueue = LucentGlobalContext.getInstance().getEntryQueue();
		
		//set raw data.
		LogTestResults ltr = new LogTestResults();
		ltr.setRawEntries(new ArrayList(entryQueue));
		
		//get summary of data:
		Iterator<LogEntry> iq = entryQueue.iterator();
		long sumNext = 0;
		long sumGetField = 0;
		long sumInit = 0;
		while (iq.hasNext()){
			LogEntry curEntry = iq.next();
			//sb.append(curEntry.getType() + " " + String.valueOf(curEntry.getElapsedTime()) + "\n");
			
			if (curEntry.getType()== LogEntryImpl.EventType.retrieveField){
				sumGetField += curEntry.getElapsedTime();
			}
			if (curEntry.getType()==LogEntryImpl.EventType.nextRow){
				sumNext += curEntry.getElapsedTime();
			}
			if (curEntry.getType()==LogEntryImpl.EventType.initialize){
				sumInit += curEntry.getElapsedTime();
			}
		}
		//sb.append("<hr>next:" + String.valueOf(sumNext) + " , getField:" + String.valueOf(sumGetField) + " , intialize: " + String.valueOf(sumInit) + "</hr>");
		
		XStream xs = new XStream();
		xs.alias("LogEntry", LogEntry.class);
		sb.append(xs.toXML(ltr));
		
		return sb.toString();
	}

	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {
		this.beanFactory = beanFactory;
	}
}





